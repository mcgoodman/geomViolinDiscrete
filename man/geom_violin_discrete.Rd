% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom_violin_discrete.R
\docType{data}
\name{stat_ycount}
\alias{stat_ycount}
\alias{StatYcount}
\alias{geom_violin_discrete}
\title{Discrete analogue to violin plots for ggplot2}
\format{
An object of class \code{StatYcount} (inherits from \code{Stat}, \code{ggproto}, \code{gg}) of length 5.
}
\usage{
stat_ycount(
  mapping = NULL,
  data = NULL,
  geom = "rect",
  position = "identity",
  width = 0.9,
  height = 0.8,
  na.rm = TRUE,
  scale = "width",
  show.legend = NA,
  inherit.aes = TRUE,
  ...
)

StatYcount

geom_violin_discrete(
  mapping = NULL,
  data = NULL,
  position = "identity",
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE,
  width = 0.9,
  height = 0.8,
  scale = "width",
  ...
)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[ggplot2:aes]{aes()}}. If specified and
\code{inherit.aes = TRUE} (the default), it is combined with the default mapping
at the top level of the plot. You must supply \code{mapping} if there is no plot
mapping.}

\item{data}{The data to be displayed in this layer. There are three
options:

If \code{NULL}, the default, the data is inherited from the plot
data as specified in the call to \code{\link[ggplot2:ggplot]{ggplot()}}.

A \code{data.frame}, or other object, will override the plot
data. All objects will be fortified to produce a data frame. See
\code{\link[ggplot2:fortify]{fortify()}} for which variables will be created.

A \code{function} will be called with a single argument,
the plot data. The return value must be a \code{data.frame}, and
will be used as the layer data. A \code{function} can be created
from a \code{formula} (e.g. \code{~ head(.x, 10)}).}

\item{geom}{The geometric object to use to display the data, either as a
\code{ggproto} \code{Geom} subclass or as a string naming the geom stripped of the
\code{geom_} prefix (e.g. \code{"point"} rather than \code{"geom_point"})}

\item{position}{Currently, only "identity" is supported}

\item{width}{maximum bar width, from zero to one}

\item{height}{bar height, from zero to one}

\item{scale}{whether to scale bars so that bars for each unique x value have the same width (scale = "width") or so that x groups with fewer data points have proportionall narrower bars (scale = "count")}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.
It can also be a named logical vector to finely select the aesthetics to
display.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link[ggplot2:borders]{borders()}}.}
}
\description{
Plot a centered vertical histrograms (a discrete analogue to violin plots)
for data for integer-values y-values. Will throw an error for non-integer data.
}
\examples{

## Simulate Poisson data
library("dplyr")

data <- tibble(
  x = sample(letters[1:4], 200, replace = TRUE, prob = c(0.4, 0.3, 0.2, 0.1)),
  y = rpois(200, as.numeric(as.factor(x)))
)

# Plot distribution, with equal width for each category
data |> ggplot(aes(x, y)) + geom_violin_discrete()

# Equivalently
data |> ggplot(aes(x, y)) + geom_rect(stat = "ycount")

# Plot distribution, scaling width by sample size
data |> ggplot(aes(x, y)) + geom_violin_discrete(scale = "count")

}
\keyword{datasets}
